{"version":3,"sources":["page/demo/animate.js"],"names":["UseState","_useState","useState","_useState2","Object","_Users_kaixie_code_static_ieg_m_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_7__","count","setCount","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","onClick","uid","Animate","props","_this","_Users_kaixie_code_static_ieg_m_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_kaixie_code_static_ieg_m_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_kaixie_code_static_ieg_m_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","addTab","arr","state","tabData","id","panel","setState","deleteTab","index","activeId","_this2","className","react_transition_group__WEBPACK_IMPORTED_MODULE_10__","map","item","react_transition_group__WEBPACK_IMPORTED_MODULE_9__","key","timeout","classNames","concat","antd_mobile_lib_button__WEBPACK_IMPORTED_MODULE_1___default","type","Component"],"mappings":"iRAOA,SAAAA,IAAqB,IAAAC,EACMC,mBADN,GAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACbK,EADaH,EAAA,GACNI,EADMJ,EAAA,GAEpB,OACCK,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,wBAAAJ,EADD,UAECE,EAAAC,EAAAC,cAAA,UAAQC,QAAS,kBAAMJ,EAASD,EAAf,KAHnB,kBAUD,IAAIM,EAAJ,EACqBC,cACjB,SAAAA,EAAAC,GAAmB,IAAAC,EAAA,OAAAX,OAAAY,EAAA,EAAAZ,CAAAa,KAAAJ,IACfE,EAAAX,OAAAc,EAAA,EAAAd,CAAAa,KAAAb,OAAAe,EAAA,EAAAf,CAAAS,GAAAO,KAAAH,KAAAH,KADeO,OAcV,WAELT,KACA,IAAIU,EAAMP,EAAAQ,MAAVC,QACAF,OAAS,CACRG,GADQb,EAERc,MAAO,eAAOd,IAEfG,EAAAY,SAAc,CACbH,QAASF,KAvBKP,EAAAa,UA2BP,SAAAC,GACR,IAAIP,EAAMP,EAAAQ,MAAVC,QACAF,cACAP,EAAAY,SAAc,CACbH,QAASF,KA7BVP,EAAAQ,MAAa,CACTO,SADS,EAETN,QAAS,CAAC,CACNC,GADM,EAENC,MAAO,iBACR,CACCD,GADD,EAECC,MAAO,mBATAX,wEAmCV,IAAAgB,EAAAd,KACGO,EAAYP,KADfM,MAAAC,QAsBL,OACIhB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,QACXxB,EAAAC,EAAAC,cAAAuB,EAAA,OArBDT,EAAAU,IAAY,SAAAC,EAAAN,GACf,OACCrB,EAAAC,EAAAC,cAAA0B,EAAA,GACCC,IAAKF,EADNV,GAEAa,QAFA,IAGAC,WAAW,QAEP/B,EAAAC,EAAAC,cAAA,OACI2B,IAAG,MAAAG,OAAQL,EAARV,KAEFU,EAHLT,MAIIlB,EAAAC,EAAAC,cAAA,QAAMsB,UAAN,kBAAkCrB,QAAS,kBAAMoB,EAAAH,UAANC,KAVpD,eAwBIrB,EAAAC,EAAAC,cAAA+B,EAAAhC,EAAA,CAAQiC,KAAR,UAAuBV,UAAvB,eAAgDrB,QAASM,KAAKI,QANtE,MAQIb,EAAAC,EAAAC,cAAAV,EATR,cA1D6B2C","file":"static/js/12.6ef9fad8.chunk.js","sourcesContent":["import React, { Component, useState } from 'react'\nimport {\n\tButton\n} from 'antd-mobile'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport '../../style/demo.scss'\n\nfunction UseState () {\n\tconst [count, setCount] = useState(0)\n\treturn (\n\t\t<div>\n\t\t\t<p>You clicked {count} times</p>\n\t\t\t<button onClick={() => setCount(count + 1)}>\n\t\t\t\tClick me haha\n\t\t\t</button>\n\t    </div>\n\t)\n}\n\nlet uid = 2\nexport default class Animate extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeId: 1,\n            tabData: [{\n                id: 1,\n                panel: '选项1'\n            }, {\n                id: 2,\n                panel: '选项2'\n            }]\n        }\n    }\n\n    addTab = () => {\n        // 添加tab代码\n        uid += 1\n        let arr = this.state.tabData\n        arr.push({\n        \tid: uid,\n        \tpanel: '选项' + uid\n        })\n        this.setState({\n        \ttabData: arr\n        })\n    }\n\n    deleteTab = (index) => {\n        let arr = this.state.tabData\n        arr.splice(index, 1)\n        this.setState({\n        \ttabData: arr\n        })\n    }\n\n    render() {\n        const { tabData } = this.state\n\n        const renderTabs = () => {\n            return tabData.map((item, index) => {\n                return (\n                \t<CSSTransition\n                \t\tkey={item.id}\n              \t\t\ttimeout={500}\n              \t\t\tclassNames=\"item\"\n                \t>\n\t                    <div\n\t                        key={`tab${item.id}`}\n\t                    >\n\t                        {item.panel}\n\t                        <span className=\"btns btn-delete\" onClick={() => this.deleteTab(index)}>✕</span>\n\t                    </div>\n                    </CSSTransition>\n                )\n            })\n        }\n\n        return (\n            <div>\n                <div className=\"tabs\" >\n                    <TransitionGroup\n                    >\n                      {renderTabs()}\n                    </TransitionGroup>\n                    <Button type='primary' className=\"btns btn-add\" onClick={this.addTab}>+</Button>\n                </div>\n                <UseState></UseState>\n            </div>\n        )\n    }\n}"],"sourceRoot":""}