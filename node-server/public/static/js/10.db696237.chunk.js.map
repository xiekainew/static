{"version":3,"sources":["page/demo/transition.js","../node_modules/_react-transition-group@4.2.1@react-transition-group/esm/TransitionGroupContext.js","../node_modules/_@babel_runtime@7.5.2@@babel/runtime/helpers/esm/defineProperty.js","../node_modules/_@babel_runtime@7.5.2@@babel/runtime/helpers/esm/objectSpread.js","../node_modules/_react-transition-group@4.2.1@react-transition-group/esm/config.js","../node_modules/_react-transition-group@4.2.1@react-transition-group/esm/Transition.js","../node_modules/_@babel_runtime@7.5.2@@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/_@babel_runtime@7.5.2@@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/_@babel_runtime@7.5.2@@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/_@babel_runtime@7.5.2@@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["defaultStyle","transition","concat","opacity","transitionStyle","entering","entered","exiting","exited","Trans","_useState","useState","_useState2","Object","_Users_kaixie_code_static_ieg_m_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","inProp","setInProp","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","react_transition_group__WEBPACK_IMPORTED_MODULE_5__","in","timeout","state","style","_Users_kaixie_code_static_ieg_m_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","antd_mobile_lib_button__WEBPACK_IMPORTED_MODULE_1___default","onClick","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","__webpack_exports__","createContext","_defineProperty","obj","key","value","defineProperty","enumerable","configurable","writable","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","filter","sym","getOwnPropertyDescriptor","forEach","d","config","UNMOUNTED","EXITED","ENTERING","ENTERED","Transition_Transition","_React$Component","Transition","props","context","_this","call","this","initialStatus","appear","isMounting","enter","appearStatus","unmountOnExit","mountOnEnter","status","nextCallback","inheritsLoose","getDerivedStateFromProps","_ref","prevState","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","undefined","mounting","node","_react_dom_16_8_6_react_dom_default","findDOMNode","performEnter","performExit","setState","_this2","appearing","timeouts","enterTimeout","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","setTimeout","render","_this$props","children","childProps","objectWithoutPropertiesLoose","_react_16_8_6_react_default","TransitionGroupContext","Provider","child","Children","only","cloneElement","Component","noop","contextType","propTypes","defaultProps","EXITING","_slicedToArray","arr","Array","isArray","arrayWithHoles","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","push","err","iterableToArrayLimit","TypeError","nonIterableRest"],"mappings":"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","file":"static/js/10.db696237.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport {\n\tButton\n} from 'antd-mobile'\nimport { Transition } from 'react-transition-group'\nconst duration = 300\nconst defaultStyle = {\n\ttransition: `opacity ${duration}ms ease-in-out`,\n\topacity: 0\n}\n\nconst transitionStyle = {\n\tentering: {opacity: 1},\n\tentered: {opacity: 1},\n\texiting: {opacity: 0},\n\texited: {opacity: 0}\n}\n\nexport default function Trans() {\n\tconst [inProp, setInProp] = useState(false)\n\n\treturn (\n\t\t<div>\n\t\t\t<Transition in={inProp} timeout={500}>\n\t\t\t\t{state => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t...defaultStyle,\n\t\t\t\t\t\t\t...transitionStyle[state]\n\t\t\t\t\t\t}}\n\t\t\t\t\t>hello world</div>\n\t\t\t\t)}\n\t\t\t</Transition>\n\t\t\t<Button onClick={() => setInProp(true)}>click</Button>\n\t\t</div>\n\t)\n}","import React from 'react';\nexport default React.createContext(null);","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","export default {\n  disabled: false\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  }; // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n      var node = ReactDOM.findDOMNode(this);\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(node, mounting);\n      } else {\n        this.performExit(node);\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(node, mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(node);\n      });\n      return;\n    }\n\n    this.props.onEnter(node, appearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(node, appearing);\n\n      _this2.onTransitionEnd(node, enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(node, appearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit(node) {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(node);\n      });\n      return;\n    }\n\n    this.props.onExit(node);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(node);\n\n      _this3.onTransitionEnd(node, timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(node);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {\n    this.setNextCallback(handler);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      this.props.addEndListener(node, this.nextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\"]); // filter props for Transtition\n\n\n    delete childProps.in;\n    delete childProps.mountOnEnter;\n    delete childProps.unmountOnExit;\n    delete childProps.appear;\n    delete childProps.enter;\n    delete childProps.exit;\n    delete childProps.timeout;\n    delete childProps.addEndListener;\n    delete childProps.onEnter;\n    delete childProps.onEntering;\n    delete childProps.onEntered;\n    delete childProps.onExit;\n    delete childProps.onExiting;\n    delete childProps.onExited;\n\n    if (typeof children === 'function') {\n      // allows for nested Transitions\n      return React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, children(status, childProps));\n    }\n\n    var child = React.Children.only(children);\n    return (// allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, React.cloneElement(child, childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.\n   * If you want to transition on the first mount set `appear` to `true`, and the\n   * component will transition in as soon as the `<Transition>` mounts.\n   *\n   * > Note: there are no specific \"appear\" states. `appear` only adds an additional `enter` transition.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. **Note:** Timeouts are still used as a fallback if provided.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func // Name the function so it is clearer in the documentation\n\n} : {};\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = 0;\nTransition.EXITED = 1;\nTransition.ENTERING = 2;\nTransition.ENTERED = 3;\nTransition.EXITING = 4;\nexport default Transition;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}"],"sourceRoot":""}